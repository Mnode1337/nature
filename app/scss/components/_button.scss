@use '../abstracts/variables' as v;
.btn {
	&,
	&:link,
	&:visited {
		display: inline-block;
		text-transform: uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		border-radius: 10rem;
		transition: all 0.2s;
		/* the reference for the pseudo-elt has to be the btn */
		position: relative;
		font-size: v.$default-font-size;

		// Change fo the <button> elt

		border: none;
		cursor: pointer;
	}

	&:hover {
		transform: translateY(-0.3rem);
		box-shadow: 0 1rem 2rem rgba($color: v.$color-black, $alpha: 0.2);
	}
	&:active,
	&:focus {
		outline: none;
		transform: translateY(-0.1rem);
		box-shadow: 0 0.5rem 1rem rgba($color: v.$color-black, $alpha: 0.2);
	}

	&--white {
		background-color: v.$color-white;
		color: v.$color-grey-dark;

		&::after {
			background-color: v.$color-white;
		}
	}

	&--green {
		background-color: v.$color-primary;
		color: v.$color-white;

		&::after {
			background-color: v.$color-primary;
		}
	}

	&::after {
		content: '';
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: 10rem;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		/* the transitn ppty is put on the initial stat */
		transition: all 0.4s;
	}

	&--white::after {
		background-color: v.$color-white;
	}

	&:hover::after {
		transform: scaleX(1.4) scale(1.6);
		opacity: 0;
	}

	&--animated {
		animation: moveInBottom 0.5s ease-in-out 0.75s;
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: v.$default-font-size;
		color: v.$color-primary;
		display: inline-block;
		text-decoration: none;
		border-bottom: 1px solid v.$color-primary;
		padding: 3px;
		transition: all 0.2s;
	}

	&:hover {
		background-color: v.$color-primary;
		color: v.$color-white;
		box-shadow: 0 1rem 2rem rgba($color: v.$color-black, $alpha: 0.15);
		transform: translateY(-2px);
	}

	&:active {
		box-shadow: 0 0.5rem 1rem rgba($color: v.$color-black, $alpha: 0.15);
		transform: translateY(0);
	}
}
